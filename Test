
import numpy as np
from graphviz import Source
from sklearn import tree
import graphviz
from sklearn.svm import SVC

# Daten laden und ggfs mit ETL Prozess aufbereiten
# Die gefundenen Features strukturiert zur Verfügung stellen
X = np.array([[0.0, 0.0 ,0.0] ,
              [1.0, 1.0 ,1.0] ,
              [5,6,7],
              [1,0,5],
              [0.0,3.2,10],
              [10,0,0],
              [0,10,3]])

# Die Label definieren (definierte, korrekte Ergebniss für die Trainingsdaten
y = np.array([0, 1, 2, 1, 0, 1,2])

# clf = SVC(gamma='auto')
clf = tree.DecisionTreeClassifier()

clf.fit(X ,y)


result = clf.predict([[0.2, 0.2, 0.2]])
print(result)

result = clf.predict([[2, 2, 2]])
print(result)

result = clf.predict([[2, 5, 2]])
print(result)

dot_data = tree.export_graphviz(clf, out_file=None,
                                feature_names=['A', 'B', 'C'],
                                filled=True,
                                special_characters=True)
dot_data = tree.export_graphviz(clf, out_file='Testplot')



